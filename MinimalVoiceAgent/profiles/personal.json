{
  "LanguageModel": {
    "ApiKeyEnvironmentVariable": "GROK_API_KEY",
    "Model": "grok-4-fast-non-reasoning",
    "EndPoint": "https://api.x.ai/v1",
    "MaxTokens": 300,
    "WelcomeMessage": "Hello! This is the local voice assistant for Caleb's computer setup. How can I assist with your tech tasks today?",
    "WelcomeFilePath": "recordings/welcome_message.wav",
    "InstructionsText": "You are a professional local voice assistant for Caleb's computer in Tennessee. Handle voice commands for system control, info, and productivity. Keep responses concise—1-3 sentences max. Confirm actions: \"Done, [summary].\" For complex requests, use tools or suggest alternatives. End interactions naturally: \"All set—let me know if you need more!\"",
    "Temperature": 0.1,
    "Tools": [
      {
        "name": "get_current_datetime",
        "description": "Retrieve the current local date and time, useful for scheduling or time-based queries.",
        "parameters": {
          "type": "object",
          "properties": {
            "timeZoneId": {
              "type": "string",
              "description": "Time zone ID (default: local system time zone)",
              "required": false,
              "default": null
            }
          }
        }
      },
      {
        "name": "perform_calculation",
        "description": "Perform a simple mathematical calculation, e.g., for quick arithmetic or code snippets.",
        "parameters": {
          "type": "object",
          "properties": {
            "expression": {
              "type": "string",
              "description": "Mathematical expression (e.g., '2 + 3 * 4')",
              "required": true
            }
          }
        }
      },
      {
        "name": "set_local_reminder",
        "description": "Set a simple in-memory reminder (persists only during runtime; e.g., 'buy new GPU next week').",
        "parameters": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Reminder message",
              "required": true
            },
            "dueTime": {
              "type": "string",
              "description": "Due time offset from now (e.g., 'in 30 minutes', 'tomorrow at 9AM')",
              "required": true
            }
          }
        }
      },
      {
        "name": "lower_volume",
        "description": "Lower the system volume by a fixed step (10%). Supported on Windows only.",
        "parameters": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "raise_volume",
        "description": "Raise the system volume by a fixed step (10%). Supported on Windows only.",
        "parameters": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "mute_volume",
        "description": "Mute the system volume (sets mute to true). Supported on Windows only.",
        "parameters": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "get_system_volume",
        "description": "Retrieve the current system volume level (0-100) and mute status. Supported on Windows only.",
        "parameters": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "name": "get_system_info",
        "description": "Get basic system information like CPU usage, memory, or hardware specs for troubleshooting.",
        "parameters": {
          "type": "object",
          "properties": {
            "infoType": {
              "type": "string",
              "description": "Type of info (e.g., 'cpu', 'memory', 'all')",
              "required": false,
              "default": "all"
            }
          }
        }
      },
      {
        "name": "set_timer",
        "description": "Set a timer that logs or alerts after a duration (e.g., '5 minutes for compile').",
        "parameters": {
          "type": "object",
          "properties": {
            "durationSeconds": {
              "type": "integer",
              "description": "Duration in seconds",
              "required": true
            },
            "message": {
              "type": "string",
              "description": "Message for when timer ends",
              "required": false,
              "default": "Timer ended."
            }
          }
        }
      },
      {
        "name": "send_notification",
        "description": "Log a message or issue for follow-up (treat 'message' as issue for general interactions).",
        "parameters": {
          "type": "object",
          "properties": {
            "issue": {
              "type": "string",
              "description": "Message content or issue description",
              "required": true
            },
            "location": {
              "type": "string",
              "description": "Location or context (optional)",
              "required": false,
              "default": ""
            },
            "urgency": {
              "type": "string",
              "description": "Urgency level (default 'medium')",
              "required": false,
              "default": "medium",
              "enum": [ "low", "medium", "high" ]
            },
            "caller_name": {
              "type": "string",
              "description": "User's name",
              "required": false,
              "default": ""
            }
          }
        }
      },
      {
        "name": "launch_application",
        "description": "Launch a desktop application by executable path, AppID, or partial name. Uses Windows Start menu search for fuzzy matching; returns candidates if topN > 1 for LLM selection.",
        "parameters": {
          "type": "object",
          "properties": {
            "appPathOrName": {
              "type": "string",
              "description": "Path, AppID, or friendly name (e.g., 'notepad', 'Microsoft.WindowsCalculator_8wekyb3d8bbwe!App')",
              "required": true
            },
            "arguments": {
              "type": "string",
              "description": "Optional command-line args (e.g., '--new-window')",
              "required": false,
              "default": ""
            },
            "topN": {
              "type": "integer",
              "description": "Top N search results to return (default 1: launch top; >1: return list without launching)",
              "required": false,
              "default": 1
            }
          }
        }
      },
      {
        "name": "open_file",
        "description": "Open a file or folder using the default system handler (e.g., for PDFs, images).",
        "parameters": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "Full path to file or folder",
              "required": true
            }
          }
        }
      },
      {
        "name": "search_local_files",
        "description": "Search for files in a directory by pattern (e.g., '*.txt' in 'Documents'). Returns top matches.",
        "parameters": {
          "type": "object",
          "properties": {
            "directory": {
              "type": "string",
              "description": "Root directory (default: user Documents)",
              "required": false,
              "default": "%USERPROFILE%\\Documents"
            },
            "pattern": {
              "type": "string",
              "description": "File pattern (e.g., '*.py', 'report.*')",
              "required": true
            },
            "maxResults": {
              "type": "integer",
              "description": "Max files to return",
              "required": false,
              "default": 10
            }
          }
        }
      },
      {
        "name": "skip_youtube_ad",
        "description": "Detect and skip YouTube ads intelligently: Captures screenshots, uses local LLaVA model via Python to generate descriptions, checks for 'Skip Ad' button presence/clickability, simulates click, verifies success.",
        "parameters": {
          "type": "object",
          "properties": {
            "maxPollSeconds": {
              "type": "integer",
              "description": "Max wait time for button (default 30s)",
              "required": false,
              "default": 30
            },
            "pollIntervalSeconds": {
              "type": "integer",
              "description": "Screenshot interval (default 2s)",
              "required": false,
              "default": 2
            }
          }
        }
      },
      {
        "name": "lock_screen",
        "description": "Lock the Windows screen immediately (user session).",
        "parameters": {
          "type": "object",
          "properties": {}
        }
      }
    ],
    "ToolInstructions": [
      {
        "toolName": "lower_volume",
        "guidance": "Invoke immediately on 'lower volume' or similar. Confirm: 'Volume lowered by 10%. Done.'",
        "priority": 1
      },
      {
        "toolName": "raise_volume",
        "guidance": "Invoke on 'raise volume' or 'turn up'. Confirm: 'Volume raised by 10%. All set.'",
        "priority": 1
      },
      {
        "toolName": "mute_volume",
        "guidance": "Invoke on 'mute' or 'silence'. Toggle if already muted; confirm: 'Muted—shh!'",
        "priority": 1
      },
      {
        "toolName": "get_system_volume",
        "guidance": "Use for 'what's the volume?' queries. Respond with level/mute status, e.g., 'Volume at 70%, not muted.'",
        "priority": 2
      },
      {
        "toolName": "perform_calculation",
        "guidance": "For math/code: Parse expression safely (e.g., 'calculate 2+3'). Output result + brief explanation.",
        "priority": 3
      },
      {
        "toolName": "send_notification",
        "guidance": "Log non-urgent notes/issues. Set urgency: 'low' for reminders, 'high' for errors. Include caller_name if known.",
        "priority": 4
      },
      {
        "toolName": "launch_application",
        "guidance": "Invoke on 'open [app]' (e.g., 'open Notepad'). If ambiguous, use topN=3 to get candidates, then re-call with selected AppID. Confirm: 'Launching [app]—ready.' Log if fails.",
        "priority": 1
      },
      {
        "toolName": "skip_youtube_ad",
        "guidance": "Invoke on 'skip ad' or 'skip YouTube ad'. Poll until clickable, click, verify (no ad post-click). Confirm success/fail via notification.",
        "priority": 2
      },
      {
        "toolName": "lock_screen",
        "guidance": "Invoke on 'lock screen'. Immediate action; confirm: 'Screen locked.'",
        "priority": 3
      },
      {
        "toolName": "open_file",
        "guidance": "Invoke on 'open [file]'. Validate path first; confirm: 'Opened [file].'",
        "priority": 2
      },
      {
        "toolName": "search_local_files",
        "guidance": "Invoke on 'find [pattern]'. Return top results; log full list if many.",
        "priority": 3
      }
    ],
    "Rules": [
      {
        "id": "system-first",
        "description": "SYSTEM FIRST: For volume/mute, invoke relevant tool immediately—e.g., 'lower volume' → lower_volume.",
        "appliesTo": [ "lower_volume", "raise_volume", "mute_volume", "get_system_volume" ]
      },
      {
        "id": "notes-logging",
        "description": "NOTES: Invoke send_notification for logs (e.g., reminders, errors). Set urgency appropriately.",
        "appliesTo": [ "send_notification" ]
      },
      {
        "id": "no-tool-fallback",
        "description": "OTHER: If no tool matches, respond naturally in 1-2 sentences; suggest alternatives.",
        "appliesTo": [ "global" ]
      },
      {
        "id": "media-automation",
        "description": "MEDIA: For YouTube/media, invoke skip_youtube_ad proactively if ad detected; combine with volume tools.",
        "appliesTo": [ "skip_youtube_ad", "lower_volume" ]
      },
      {
        "id": "file-safety",
        "description": "FILES: Validate paths before open/search to avoid errors; use send_notification for results lists.",
        "appliesTo": [ "open_file", "search_local_files" ]
      }
    ]
  }
}